import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as e}from"./app-DbMoMdSU.js";const t={},p=e(`<h2 id="为什么会有跨域" tabindex="-1"><a class="header-anchor" href="#为什么会有跨域"><span>为什么会有跨域</span></a></h2><ul><li>浏览器同源策略影响 <ul><li>协议</li><li>域名</li><li>端口号</li><li>地址栏 form src 不需要</li></ul></li></ul><h2 id="cors-开发过程中-后端给我们设置-响应头" tabindex="-1"><a class="header-anchor" href="#cors-开发过程中-后端给我们设置-响应头"><span>cors 开发过程中 后端给我们设置 响应头</span></a></h2><p>Access-Control-Allow-Origin 后端设置的访问权限</p><h2 id="vue-react-项目里面-webpack-配置代理来跨域" tabindex="-1"><a class="header-anchor" href="#vue-react-项目里面-webpack-配置代理来跨域"><span>vue，react,项目里面 webpack 配置代理来跨域</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// vue</span>
 <span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token punctuation">{</span>
 <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span><span class="token punctuation">{</span>
     <span class="token literal-property property">target</span><span class="token operator">:</span><span class="token string">&quot;http://localhost:8089&quot;</span><span class="token punctuation">,</span> <span class="token comment">//访问的真是服务器地址</span>
     <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
     <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span><span class="token punctuation">{</span>
         <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>    
<span class="token comment">// react </span>
<span class="token comment">//创建 src/setupProxy.js</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http-proxy-middleware&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
        <span class="token function">proxy</span><span class="token punctuation">(</span><span class="token string">&quot;/api/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8089/&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span><span class="token punctuation">{</span>
                 <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span>
             <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jsonp" tabindex="-1"><a class="header-anchor" href="#jsonp"><span>jsonp</span></a></h2><p>第三方公司可能会使用jsonp</p><ul><li>src去访问的时候不受同源策略影响</li><li>提供过动态创建 script 在script的src属性上发请求</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://127.0.0.1:8089/user?cb=fn1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>后端会返回一个函数的调用 里面参数就是后端给的数据 fn1({code:200,msg:&quot;ok&quot;,data:[]})</li><li>前端需要声明函数</li><li>要通过地址把函数名传递给后端，后端动态调用函数</li><li>jsonp 一定是get请求</li></ul><h2 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>websocket</span></a></h2><p>实时通讯 ws://</p><h2 id="页面与页面之间的跨域" tabindex="-1"><a class="header-anchor" href="#页面与页面之间的跨域"><span>页面与页面之间的跨域</span></a></h2><p>iframe src<br> document.domain</p><h2 id="nginx-反向代理" tabindex="-1"><a class="header-anchor" href="#nginx-反向代理"><span>nginx 反向代理</span></a></h2><p>服务端设置</p>`,17),l=[p];function o(i,c){return s(),a("div",null,l)}const d=n(t,[["render",o],["__file","跨域.html.vue"]]),k=JSON.parse('{"path":"/front-end/browser/%E6%9C%BA%E5%88%B6/%E8%B7%A8%E5%9F%9F.html","title":"浏览器跨域","lang":"zh-CN","frontmatter":{"title":"浏览器跨域","category":["浏览器"],"tag":["浏览器"]},"headers":[{"level":2,"title":"为什么会有跨域","slug":"为什么会有跨域","link":"#为什么会有跨域","children":[]},{"level":2,"title":"cors 开发过程中 后端给我们设置  响应头","slug":"cors-开发过程中-后端给我们设置-响应头","link":"#cors-开发过程中-后端给我们设置-响应头","children":[]},{"level":2,"title":"vue，react,项目里面 webpack 配置代理来跨域","slug":"vue-react-项目里面-webpack-配置代理来跨域","link":"#vue-react-项目里面-webpack-配置代理来跨域","children":[]},{"level":2,"title":"jsonp","slug":"jsonp","link":"#jsonp","children":[]},{"level":2,"title":"websocket","slug":"websocket","link":"#websocket","children":[]},{"level":2,"title":"页面与页面之间的跨域","slug":"页面与页面之间的跨域","link":"#页面与页面之间的跨域","children":[]},{"level":2,"title":"nginx 反向代理","slug":"nginx-反向代理","link":"#nginx-反向代理","children":[]}],"git":{"createdTime":1713621280000,"updatedTime":1713621280000,"contributors":[{"name":"liShuangQ-pc","email":"li_shuangq@foxmail.com","commits":1}]},"readingTime":{"minutes":0.96,"words":289},"filePathRelative":"front-end/browser/机制/跨域.md","localizedDate":"2024年4月20日"}');export{d as comp,k as data};
