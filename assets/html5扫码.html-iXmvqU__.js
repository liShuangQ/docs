import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as s,d as a,e as o,b as c,o as i,r as l}from"./app-C3oFAs9P.js";const u="/docs/assets/img-DEsyVJHQ.png",k={},r={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/BarcodeDetector",target:"_blank",rel:"noopener noreferrer"};function d(v,n){const t=l("ExternalLinkIcon");return i(),e("div",null,[s("ul",null,[s("li",null,[n[1]||(n[1]=s("code",null,"注意其中使用了实验性API",-1)),n[2]||(n[2]=a()),s("a",r,[n[0]||(n[0]=a("BarcodeDetector")),o(t)])])]),n[3]||(n[3]=c(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>   <span class="token keyword">const</span> <span class="token function-variable function">getCamerasScan</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 请求摄像头权限</span>
        <span class="token keyword">const</span> devices <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">enumerateDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> videoDevices <span class="token operator">=</span> devices<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">device</span> <span class="token operator">=&gt;</span> device<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;videoinput&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> selectedDeviceId<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>videoDevices<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 选择后置摄像头</span>
            <span class="token keyword">const</span> backCamera <span class="token operator">=</span> videoDevices<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">device</span> <span class="token operator">=&gt;</span> device<span class="token punctuation">.</span>label<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;back&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> device<span class="token punctuation">.</span>label<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;环境&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>backCamera<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                selectedDeviceId <span class="token operator">=</span> backCamera<span class="token punctuation">.</span>deviceId<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果没有找到后置摄像头，选择第一个摄像头</span>
                selectedDeviceId <span class="token operator">=</span> videoDevices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>deviceId<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>videoDevices<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 只有一个摄像头，直接选择</span>
            selectedDeviceId <span class="token operator">=</span> videoDevices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>deviceId<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> constraints <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">deviceId</span><span class="token operator">:</span> selectedDeviceId <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token literal-property property">exact</span><span class="token operator">:</span> selectedDeviceId<span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                <span class="token literal-property property">facingMode</span><span class="token operator">:</span> <span class="token string">&#39;environment&#39;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> stream <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">getUserMedia</span><span class="token punctuation">(</span>constraints<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;video&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        video<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">&#39;250px&#39;</span>
        video<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">&#39;250px&#39;</span>
        video<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;fixed&#39;</span>
        video<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">&#39;25%&#39;</span>
        video<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">&#39;20%&#39;</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#reader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>video<span class="token punctuation">)</span>
        video<span class="token punctuation">.</span>srcObject <span class="token operator">=</span> stream<span class="token punctuation">;</span>
        video<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 等待视频准备好</span>
        <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            video<span class="token punctuation">.</span>oncanplay <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建BarcodeDetector实例</span>
        <span class="token keyword">const</span> detector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BarcodeDetector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">formats</span><span class="token operator">:</span>
                <span class="token punctuation">[</span><span class="token string">&#39;aztec&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code_128&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code_39&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code_93&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;codabar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data_matrix&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ean_13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ean_8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;itf&#39;</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;pdf417&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;qr_code&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;upc_a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;upc_e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 开始循环扫描</span>
        <span class="token comment">// eslint-disable-next-line no-inner-declarations</span>
        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">scanLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> video<span class="token punctuation">.</span>videoWidth<span class="token punctuation">;</span>
            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> video<span class="token punctuation">.</span>videoHeight<span class="token punctuation">;</span>

            <span class="token comment">// 需要验证扫描的图片时打开</span>
            <span class="token comment">// document.querySelector(&#39;#reader&#39;).appendChild(canvas)</span>

            <span class="token comment">// eslint-disable-next-line no-constant-condition</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 每秒拍摄一张照片</span>
                <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>video<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 确保图像已经绘制完成</span>
                    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 扫描条形码</span>
                    <span class="token keyword">const</span> barcodes <span class="token operator">=</span> <span class="token keyword">await</span> detector<span class="token punctuation">.</span><span class="token function">detect</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>barcodes<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>barcodes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rawValue<span class="token punctuation">,</span> <span class="token string">&#39;扫描出来的信息&#39;</span><span class="token punctuation">)</span>
                        <span class="token comment">// 关闭摄像头</span>
                        stream<span class="token punctuation">.</span><span class="token function">getTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">track</span> <span class="token operator">=&gt;</span> track<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// 走自己的业务逻辑</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;扫描失败:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token function">scanLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;无法访问摄像头:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="img.png" tabindex="0" loading="lazy"><figcaption>img.png</figcaption></figure>',2))])}const g=p(k,[["render",d],["__file","html5扫码.html.vue"]]),y=JSON.parse('{"path":"/front-end/browser/%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/html5%E6%89%AB%E7%A0%81.html","title":"html5纯前端扫码实现","lang":"zh-CN","frontmatter":{"title":"html5纯前端扫码实现","category":["代码片段"],"tag":["js BarcodeDetector"]},"headers":[],"git":{"createdTime":1730785707000,"updatedTime":1730860497000,"contributors":[{"name":"shuangqi.li","email":"li_shuangq@foxmail.com","commits":4}]},"readingTime":{"minutes":1.22,"words":366},"filePathRelative":"front-end/browser/代码片段/html5扫码.md","localizedDate":"2024年11月5日"}');export{g as comp,y as data};
