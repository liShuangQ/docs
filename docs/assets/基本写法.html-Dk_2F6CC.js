import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,a as e,t as l,e as i}from"./app-D9ESh9qd.js";const o={},h=e("h1",{id:"vue实例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue实例"},[e("span",null,"Vue实例")])],-1),d=e("h2",{id:"el-挂载点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#el-挂载点"},[e("span",null,"el 挂载点")])],-1),p=e("li",null,"el后可以使用其它选择器，建议使用id选择器",-1),r=e("li",null,"其中Message对外部是没用的，在el元素命中的内部才可以使用",-1),c=e("li",null,"new Vue （V是大写的）",-1),u=e("li",null,"给一个父元素设置挂载点 下面的元素都可以直接使用",-1),m=i('<h2 id="data数据对象" tabindex="-1"><a class="header-anchor" href="#data数据对象"><span>data数据对象</span></a></h2><ul><li>当data中复杂类型时 遵守js的语法</li></ul><h2 id="methods-方法" tabindex="-1"><a class="header-anchor" href="#methods-方法"><span>methods 方法</span></a></h2><ul><li>methods内写绑定的方法</li><li>方法中通过this关键字 获取data中的数据</li></ul><h2 id="vue指令" tabindex="-1"><a class="header-anchor" href="#vue指令"><span>Vue指令</span></a></h2><h3 id="v-text" tabindex="-1"><a class="header-anchor" href="#v-text"><span>v-text</span></a></h3>',6),v=e("li",null,"覆盖，会顶掉元素内之前写的内容",-1),_=e("li",null,"后面可以进行字符串拼接，但是由于两边已经是双引号了，所以另外添加的需要是单引号",-1),x=i('<h3 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html"><span>v-html</span></a></h3><p>innerHTML</p><ul><li>写法与v-text相同，效果与innerHTML相同</li></ul><h3 id="v-on" tabindex="-1"><a class="header-anchor" href="#v-on"><span>v-on</span></a></h3><p>为元素绑定事件 简写为 @</p><ul><li>v-on：与 @ 效果相同</li><li>methods内写绑定的方法</li><li>事件不加on与js语法相同（on已经在v-on添加完了）</li><li>当事件中效果要更改页面数据时 （图一html 图二js）</li><li></li></ul><p>实现点击一次内容添加一个“好好吃！”</p><ul><li>获取页面中的元素 this.xxx</li><li>添加 this.xxx += “yyy” 案例：点击计数</li></ul><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充！！！</span></a></h2><ul><li><p>事件绑定的方法写成函数调用的方式 xxx（）</p></li><li><p>定义方法时 定义形参接收传入的实参</p></li><li><p>@keyup.enter 事件修饰符（.修饰符），限制按键是enter才会执行 v-show 根据表达值的布尔值真假，切换元素显示和隐藏 操控样式 原理为 display：none</p></li><li><p>上图中 第一个div满足条件显示 第二个不满足条件不显示</p></li><li><p>v-show后面的判断条件是最后被解析成 布尔值</p></li><li><p>配合v-on等指令更换data中的数值实现灵活控制时候显示（案例） 案例：点击按钮切换显示状态 通过方法更改显示状态</p></li></ul><p>v-if 根据表达值的布尔值真假，切换元素显示和隐藏 与v-show不同 直接操控dom 使用方法一致 元素直接在文档中出现消失 注意：在使用中 频繁切换的元素用v-show反之v-if v-bind 设置元素的属性（例如src class等 都是行内的） 简写为 ： 用法</p><p>表达class是否添加的写法</p>',12),g=i("<li><p>第一种和第二种效果一致 两种写法 后面通过方法改变data中的值改变class是否出现 简写：v-bind可以省略</p></li><li><p>三元表达式写法 对象写法（推荐）</p></li><li><p>对象写法中：对象取决于对象后面的是否成立 active取决于isActive是否成立 v-for 根据数据生成列表结构 例如：当数组中有4个值的时候，就会给你生成4个（如下图中 会生成4个li）</p></li><li><p>v-for后 （it，index）in arr 。</p></li><li><p>遍历arr这个数组，其中it是数组的每个值 index是数组的下标</p></li><li><p>（it，index）可以写别的</p></li><li><p>当遍历的类型时数组对象时，遍历出来的每个对象在使用处用 .xxx 得到获取的对象的需??????????</p></li><li><p>data中的数组对象可以在方法中进行数组对象操作（push shift。。。）</p></li><li><p>数组长度会随着修改同步更新 案例：遍历数组中对象 v-model 获取和设置表单元素的值（双向数据绑定）</p></li><li><p>更改两边的任意一边 另一个都会随着更改</p></li><li><p>绑定的数据和表单元素值相互关联</p></li>",11),f=e("p",null,"Axios",-1),y=e("p",null,"get",-1),b=e("p",null,"Post",-1),V=e("p",null,"Vue+axios",-1),k=e("ul",null,[e("li",null,"由于axios内的this已经改变，所以用新开的that变量与this连接（不新开变量箭头函数也可）")],-1);function E(t,w){return n(),s("div",null,[h,d,e("ul",null,[p,e("li",null,"只能支持双标签html，body除外（因为单标签的内部无法写"+l(t.message)+" ），建议挂载div 因为div没有基础的样式 ，p，h2等会有自己本身的样式",1),r,c,u]),m,e("ul",null,[e("li",null,"设置元素文本 简写为 "+l(),1),v,_,e("li",null,l(t.message)+"添加不会清除原来的内容， "+l(t.message)+"同样支持字符串拼接",1)]),x,e("ul",null,[g,e("li",null,[e("p",null,"更改后值确实在同步更新 但是不会体现在代码里面 可以在设置个"+l(t.xxx)+"进行查看 案例：验证双向绑定 修改一边另一边改变",1)])]),f,y,b,V,k])}const A=a(o,[["render",E],["__file","基本写法.html.vue"]]),B=JSON.parse('{"path":"/front-end/vue/vue2/%E5%9F%BA%E6%9C%AC%E5%86%99%E6%B3%95.html","title":"基本写法","lang":"zh-CN","frontmatter":{"title":"基本写法","category":["介绍"],"tag":["vue"],"description":"Vue实例 el 挂载点 el后可以使用其它选择器，建议使用id选择器 只能支持双标签html，body除外（因为单标签的内部无法写{{message}} ），建议挂载div 因为div没有基础的样式 ，p，h2等会有自己本身的样式 其中Message对外部是没用的，在el元素命中的内部才可以使用 new Vue （V是大写的） 给一个父元素设置挂载点...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/front-end/vue/vue2/%E5%9F%BA%E6%9C%AC%E5%86%99%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"基本写法"}],["meta",{"property":"og:description","content":"Vue实例 el 挂载点 el后可以使用其它选择器，建议使用id选择器 只能支持双标签html，body除外（因为单标签的内部无法写{{message}} ），建议挂载div 因为div没有基础的样式 ，p，h2等会有自己本身的样式 其中Message对外部是没用的，在el元素命中的内部才可以使用 new Vue （V是大写的） 给一个父元素设置挂载点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-19T15:23:18.000Z"}],["meta",{"property":"article:author","content":"Mr.Shuangqi"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:modified_time","content":"2024-04-19T15:23:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本写法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-19T15:23:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Shuangqi\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"el 挂载点","slug":"el-挂载点","link":"#el-挂载点","children":[]},{"level":2,"title":"data数据对象","slug":"data数据对象","link":"#data数据对象","children":[]},{"level":2,"title":"methods 方法","slug":"methods-方法","link":"#methods-方法","children":[]},{"level":2,"title":"Vue指令","slug":"vue指令","link":"#vue指令","children":[{"level":3,"title":"v-text","slug":"v-text","link":"#v-text","children":[]},{"level":3,"title":"v-html","slug":"v-html","link":"#v-html","children":[]},{"level":3,"title":"v-on","slug":"v-on","link":"#v-on","children":[]}]},{"level":2,"title":"补充！！！","slug":"补充","link":"#补充","children":[]}],"git":{"createdTime":1713534858000,"updatedTime":1713540198000,"contributors":[{"name":"shuangqi.li","email":"li_shuangq@foxmail.com","commits":4}]},"readingTime":{"minutes":3.53,"words":1060},"filePathRelative":"front-end/vue/vue2/基本写法.md","localizedDate":"2024年4月19日","autoDesc":true}');export{A as comp,B as data};
